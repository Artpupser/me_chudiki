@import url('https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap');

:root {
   --cube-sizeX: min(50dvw, 55dvh);
   --cube-sizeY: min(55dvw, 55dvh);
   --face-sizeX: min(50dvw, 55dvh);
   --face-sizeY: min(55dvw, 55dvh);
   --rotate-size: min(25dvw, 30dvh);

   --perspective: max(100dvw, 100dvh);
   --small-text-size: calc(min(10dvw, 10dvh) * 0.2);
   --mid-text-size: calc(min(10dvw, 10dvh) * 0.25);
   --large-text-size: calc(min(10dvw, 10dvh) * 0.3);

   --anim-front: ease infinite 5s;
   --anim-back: ease infinite 5s;
   --anim-top: ease infinite 5s;
   --anim-bottom: ease infinite 5s;
   --anim-left: ease infinite 5s;
   --anim-right: ease infinite 5s;
   --anim-offset: min(5dvh, 5dvw)
}

body {
   display: flex;
   justify-content: center;
   align-items: center;
   height: 100vh;
   margin: 0;
   user-select: none;
   background-color: #000000;
   min-width: 100dvw;
   min-height: 100dvh;
}

* {
   font-family: "Rubik", serif;
   font-optical-sizing: auto;
   font-weight: 300;
   font-style: normal;
}

.small-text {
   font-size: var(--small-text-size);
}

.mid-text {
   font-size: var(--mid-text-size);
}

.large-text {
   font-size: var(--large-text-size);
}

.container {
   perspective: var(--perspective);
}

.cube {
   position: relative;
   width: var(--cube-sizeX);
   height: var(--cube-sizeY);
   transform-style: preserve-3d;
   transition: ease 0.2s;
}

.face {
   position: absolute;
   width: var(--face-sizeX);
   height: var(--face-sizeY);
   background-color: rgb(255, 255, 255);
   display: flex;
   justify-content: center;
   align-items: center;
   align-self: center;
   font-size: 20px;
   border-radius: 25px;
}

.front {
   transform: rotateY(0deg) translateZ(var(--rotate-size));
   animation: FrontAnimation var(--anim-front);
}

.back {
   transform: rotateY(180deg) translateZ(var(--rotate-size));
   animation: BackAnimation var(--anim-back);
}

.left {
   transform: rotateY(-90deg) translateZ(var(--rotate-size));
   animation: LeftAnimation var(--anim-left);
}

.right {
   transform: rotateY(90deg) translateZ(var(--rotate-size));
   animation: RightAnimation var(--anim-right);
}

.top {
   transform: rotateX(90deg) translateZ(var(--rotate-size));
   animation: TopAnimation var(--anim-top);
}

.bottom {
   transform: rotateX(-90deg) translateZ(var(--rotate-size));
   animation: BottomAnimation var(--anim-bottom);
}

@keyframes FrontAnimation {
   0% {
      transform: rotateY(0deg) translateZ(var(--rotate-size));
   }

   50% {
      transform: rotateY(0deg) translateZ(calc(var(--rotate-size) + var(--anim-offset)));
   }

   100% {
      transform: rotateY(0deg) translateZ(var(--rotate-size));
   }
}

@keyframes BackAnimation {
   0% {
      transform: rotateY(180deg) translateZ(var(--rotate-size));
   }

   50% {
      transform: rotateY(180deg) translateZ(calc(var(--rotate-size) + var(--anim-offset)));
   }

   100% {
      transform: rotateY(180deg) translateZ(var(--rotate-size));
   }
}

@keyframes LeftAnimation {
   0% {
      transform: rotateY(-90deg) translateZ(var(--rotate-size));
   }

   50% {
      transform: rotateY(-90deg) translateZ(calc(var(--rotate-size) + var(--anim-offset)));
   }

   100% {
      transform: rotateY(-90deg) translateZ(var(--rotate-size));
   }
}

@keyframes RightAnimation {
   0% {
      transform: rotateY(90deg) translateZ(var(--rotate-size));
   }

   50% {
      transform: rotateY(90deg) translateZ(calc(var(--rotate-size) + var(--anim-offset)));
   }

   100% {
      transform: rotateY(90deg) translateZ(var(--rotate-size));
   }
}


@keyframes TopAnimation {
   0% {
      transform: rotateX(90deg) translateZ(var(--rotate-size));
   }

   50% {
      transform: rotateX(90deg) translateZ(calc(var(--rotate-size) + var(--anim-offset)));
   }

   100% {
      transform: rotateX(90deg) translateZ(var(--rotate-size));
   }
}

@keyframes BottomAnimation {
   0% {
      transform: rotateX(-90deg) translateZ(var(--rotate-size));
   }

   50% {
      transform: rotateX(-90deg) translateZ(calc(var(--rotate-size) + var(--anim-offset)));
   }

   100% {
      transform: rotateX(-90deg) translateZ(var(--rotate-size));
   }
}